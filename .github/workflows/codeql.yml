name: "CodeQL"

on:

 push:

  branches: [ "main" ] # Replace "main" with your desired branch

 pull_request:

  branches: [ "main" ]

 schedule:

  - cron: '0 3 * * 0' # weekly

jobs:

 analyze:

  name: Analyze

  runs-on: ubuntu-latest

  permissions:

   actions: read

   contents: read

   security-events: write

  strategy:

   fail-fast: false

   matrix:

    language: [ 'javascript', 'typescript' ]

  steps:

   - name: Checkout repository

    uses: actions/checkout@v4

   - name: Initialize CodeQL

    uses: github/codeql-action/init@v3

    with:

     languages: ${ matrix.language }

   - name: Install dependencies

    run: |

     if [ -f package-lock.json ]; then

      npm ci

     elif [ -f yarn.lock ]; then

      yarn install

     else

      npm install

     fi

   - name: Autobuild

    uses: github/codeql-action/autobuild@v3

   - name: Perform CodeQL Analysis

    uses: github/codeql-action/analyze@v3